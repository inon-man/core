name: Tests / Code Coverage
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main
      - "release/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  get_diff:
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Get git diff
        uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.wasm
            **/**.go
            **/**.mod
            **/**.sum
            Makefile
            Dockerfile
            .github/workflows/test.yml
      - name: Set output
        id: vars
        run: echo "git_diff=$GIT_DIFF" >> $GITHUB_OUTPUT
    outputs:
      git_diff: ${{ steps.vars.outputs.git_diff }}

  run-tests:
    needs: get_diff
    if: ${{ needs.get_diff.outputs.git_diff || github.actor == 'dependabot[bot]' || github.actor == 'mergify[bot]' }}
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: üêø Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Display go version
        run: go version
      - name: build
        run: |
          make build
      - name: test & coverage report creation
        run: |
          make test-cover

  liveness-test:
    needs: get_diff
    if: ${{ needs.get_diff.outputs.git_diff || github.actor == 'dependabot[bot]' || github.actor == 'mergify[bot]' }}
    runs-on: buildjet-4vcpu-ubuntu-2204
    timeout-minutes: 10
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: üêø Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Display go version
        run: go version
      # Enable BuildKit
      - name: Set BuildKit environment variable
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
      - name: start localnet
        run: |
          make localnet-start
      - name: test liveness
        run: |
          ./tests/localnet/localnet_liveness.sh 100 3 30 localhost

  upgrade-test:
    needs: get_diff
    if: ${{ needs.get_diff.outputs.git_diff || github.actor == 'dependabot[bot]' || github.actor == 'mergify[bot]' }}
    runs-on: buildjet-4vcpu-ubuntu-2204
    timeout-minutes: 15
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      # Run upgrade-test only if there are changes in app/upgrades/** 
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            app/upgrades/**
      - name: üêø Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Display go version
        run: go version
      # Enable BuildKit
      - name: Set BuildKit environment variable
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
      - name: test upgrade
        if: env.GIT_DIFF
        run: |
          make localnet-upgrade-test

  e2e:
    needs: get_diff
    if: ${{ needs.get_diff.outputs.git_diff || github.actor == 'dependabot[bot]' || github.actor == 'mergify[bot]' }}
    runs-on: buildjet-4vcpu-ubuntu-2204
    timeout-minutes: 20
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: üêø Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build e2e image
        uses: docker/build-push-action@v5
        with:
          load: true
          context: .
          tags: terra:debug
          build-args: |
            BASE_IMG_TAG=debug
            BUILD_TAGS="netgo,muslc"
      - name: Test e2e and Upgrade
        run: make test-e2e-ci
      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: "./logs"
      - name: Tar logs
        if: failure()
        run: |
          tar cvzf ./logs.tgz ./logs
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs.tgz
          path: ./logs.tgz